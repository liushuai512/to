'use strict';

//获取问号传参值
String.prototype.myQueryURLParameter = function () {
    var reg = /([^?&#=]+)=([^?&#=]+)/g,
        obj = {};
    this.replace(reg, function () {
        obj[arguments[1]] = arguments[2];
    });
    reg = /#([^?=#&]+)/;
    this.replace(reg, function () {
        obj['HASH'] = arguments[1];
    });
    return obj;
};

/*MAIN RENDER*/
var mainRender = function () {
    var $header = $('.header'),
        $main = $('.main'),
        $menu = $main.find('.menu'),
        $calendar = $main.find('.calendar'),
        $match = $main.find('.match');
    var computedHeight = function computedHeight() {
        var winH = $(window).height(),
            //获取一屏幕的高度,height 是一个集成方法
        heightH = $header.outerHeight(),
            calendarH = $calendar.outerHeight();

        var mainH = winH - heightH - 40;
        $main.height(mainH);
        $menu.height(mainH - 2);
        $match.height(mainH - calendarH - 20);
    };

    return {
        init: function init() {
            computedHeight();
            $(window).on('resize', computedHeight);
        }
    };
}();

mainRender.init();

/*MENU READER
*
* 1、给menu区域实现局部滚动（ISCROLL.js）
* 2、根据URL中的HASH值，让某一个A选中（点击A的时候，需要往URL中加HASH值），并且滚动到这个A的位置
* 3、点击左侧的每一个A，让右侧展示不同的内容
* */
var menuRender = function () {
    var $menuPlan = $.Callbacks();

    var example = null,
        HASH = null;

    var $menu = $('.menu'),
        $link = $menu.find('a');

    $menuPlan.add(function () {
        new IScroll('.menu', {
            scrollbars: true,
            fadeScrollbars: true,
            mouseWheel: true,
            bounce: false
        });

        $('.iScrollIndicator').css('opacity', 0.3);
    });

    //HASH定位
    $menuPlan.add(function () {
        HASH = window.location.href.myQueryURLParameter()['HASH'];
        var $cur = $link.filter('[href="#' + HASH + '"]'); //->验证JQ是否获取到想要的内容,不能使用NULL/UNDEFINED验证,因为即使没有获取到,得到的依然是JQ的类数组(伪数组),只是LENGTH为零而已
        $cur.length === 0 ? $cur = $link.eq(0) : null;
        $cur.addClass('bg');

        example.scrollToElement($cur[0], 0); //->ISCROLL:滚动到具体的某一个元素位置([原生的元素对象],[时间])
    });

    //->点击操作
    $menuPlan.add(function () {
        $link.filter(':not(.link)').on('click', function () {
            $(this).addClass('bg').parent().siblings().find('a').removeClass('bg'); //->也可以使用JQ中的循环,循环$link来处理
        });
    });

    return {
        init: function init() {
            $menuPlan.fire(); //->JQ:通知计划表中的方法依次执行,还可以给每个方法传递参数,$menuPlan.fire(100)相当于给计划表中的每一个方法都传递了100
        }
    };
}();

menuRender.init();

var calendarRender = function () {

    return {
        init: function init() {}
    };
}();
calendarRender.init();
