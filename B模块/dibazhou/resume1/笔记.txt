1、安装需要使用的第三方模块

bower：从gitHub上下载资源文件，一般应用于客户端想要调取某一个类库或者框架等
  安装bower到全局：npm install bower -g

  bower init =>在本地项目中生成一个bower.json文件

  bower install xxx --save-dev
            --save 保存到发布产品时候的依赖清单中(产品上线需要)
            --save-dev 保存到开发产品时候的依赖清单中(上线可能不需要，但是开发中需要)

使用bower下载安装，需要保证在DOS命令中集成了git命令，因为bower是基于git下载的，如何保证git命令能够集成到DOS中，我们需要配置环境变量：

---------------
npm init -y   =>package.json

npm install xxx --save-dev (--save) 安装到本地项目中

如果需要使用命令的话，我们还需要配置“命令”操作(package.json)

---------------------------------------------------------
LESS / SASS ...

=>CSS预编译语言，CSS不是编程语言，它只是标记语言，在CSS中没有变量、函数、判断、继承、作用域等等这些概念；LESS/SASS等就是按照新的语法(面向对象编程的语法)去写样式，但是写好的样式代码，浏览器不能识别，还需要把他们编译成正常的CSS代码才可以

=>lessc css/index.less css/index.min.css -x 这个命令就是把某一个LESS代码编译为正常能识别的CSS代码，并且进行压缩
  <head>
    <link rel='stylesheet' href='css/index.min.css'/>
  </head>

  [产品上线]


=>在开发的时候，我们可以引入一个less.min.js文件，这样我们开发的时候导入less文件，这个js可以帮我们随时编译成CSS
  <head>
    <link rel='stylesheet/less' href='css/index.less'/>
    <script src='js/less.min.js'></script><!--这个JS首先找到所有导入的LESS文件，然后进行编译，把他们编译成CSS，然后让浏览器渲染的是CSS-->
  </head>

  [产品开发]


===================================
1、CSS3中的3D变形  ->transform

  1)给当前需要3D变形的元素坐在区域（舞台）设置景深：人们距离舞台的距离，不设置的话默认是紧挨着舞台，这样什么都看不见了（一叶障目）
    。cube{
       perspection:2000px;  2000de 意思是人眼距离屏幕的距离是2000px,
    }
  2）给当前元素设置3D变形属性
   preserve-3d

   3）给正方体盒子中的每一个面移动端具体的位置即可，最后组成一个3D的立体盒子



-----------------------------------
移动端时间
PC：
  click 点击
  dblclick  双击
  mouseover（mouseenter）//over:会产生冒泡
  mouseout(mouseleave)
  mousemove
  mousedown
  mouseup
  mousewheel 鼠标滚动事件

  keydown
  keypress
  keyup
  load
  error
  unload(关闭)
  beforeunload


  blur
  focus



  window.onload(页面打开，并且资源文件加载完成)
  window.onerror(页面打开，但是资源文件加载失败)
  window.onunload(页面关闭)
  window.onbeforeunload（页面关闭之前）

移动端的事件
click(单击->300MS验证时间，从第一次点击结束后开始计时，造300MS内如果没有触发第二次点击，则为单击，触发则为双击或者多击) =>移动端click事件的300MS延迟
dblclick


移动端专属的事件：touch事件模型(单手指操作) ： touchstart、touchmove、touchend、touchcancel
gesture事件模型（多手指操作） gesturestart、gesturechangs、gestureend、gesturecancel



DOM0比DOM2 的性能好





























